{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["x","y","videoElement","document","getElementsByClassName","canvasElement","canvasCtx","getContext","hands","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","results","save","clearRect","width","height","drawImage","image","multiHandLandmarks","landmarks","restore","Camera","onFrame","a","send","start","generator","rough","createElement","id","x1","y1","x2","y2","type","roughElement","line","rectangle","points","Error","nearPoint","name","Math","abs","onLine","maxDistance","b","c","offset","distance","positionWithinElement","element","on","end","topLeft","topRight","bottomLeft","bottomRight","some","point","index","nextPoint","sqrt","pow","getElementAtPosition","elements","map","position","find","drawElement","roughCanvas","context","draw","stroke","length","d","reduce","acc","i","arr","x0","y0","push","join","getSvgPathFromStroke","getStroke","fill","Path2D","App","initialState","useState","setIndex","history","setHistory","action","overwrite","newState","historyCopy","updatedState","slice","prevState","useHistory","setElements","undo","redo","setAction","tool","setTool","selectedElement","setSelectedElement","useLayoutEffect","canvas","getElementById","forEach","useEffect","undoRedoFunction","event","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","updateElement","elementsCopy","style","checked","onChange","htmlFor","bottom","padding","onClick","window","location","reload","innerWidth","innerHeight","onMouseDown","clientX","clientY","xOffsets","yOffsets","offsetX","offsetY","onMouseMove","target","cursor","cursorForPosition","newPoints","_","newX1","newY1","coordinates","resizedCoordinates","onMouseUp","includes","adjustmentRequired","minX","min","maxX","max","adjustElementCoordinates","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7a38d15.chunk.js","sourcesContent":["import React, { useRef, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm\";\r\nimport getStroke from \"perfect-freehand\";\r\nimport {Hands} from '@mediapipe/hands'\r\n// import * as hands from '@mediapipe/hands'\r\nimport * as Camera from '@mediapipe/camera_utils'\r\n// import * as Webcam from 'react-webcam'\r\n\r\nvar x=0;\r\nvar y=0;\r\nconst videoElement = document.getElementsByClassName('input_video')[0];\r\nconst canvasElement = document.getElementsByClassName('output_canvas')[0];\r\nconst canvasCtx = canvasElement.getContext('2d');\r\nfunction onResults(results) {\r\n  canvasCtx.save();\r\n  canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n  canvasCtx.drawImage(\r\n      results.image, 0, 0, canvasElement.width, canvasElement.height);\r\n  if (results.multiHandLandmarks) {\r\n    for (const landmarks of results.multiHandLandmarks) {\r\n      x=landmarks[8].x;\r\n      y=landmarks[8].y;\r\n    }\r\n  }\r\n  canvasCtx.restore();\r\n}\r\n\r\nconst hands = new Hands({locateFile: (file) => {\r\n    return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\r\n  }});\r\nhands.setOptions({\r\n  maxNumHands: 2,\r\n  modelComplexity: 1,\r\n  minDetectionConfidence: 0.5,\r\n  minTrackingConfidence: 0.5\r\n});\r\nhands.onResults(onResults);\r\n\r\nconst camera = new Camera(videoElement, {\r\n  onFrame: async () => {\r\n    await hands.send({image: videoElement});\r\n  },\r\n  width: 1280,\r\n  height: 720\r\n});\r\ncamera.start();\r\n\r\nconst generator = rough.generator();\r\n\r\nconst createElement = (id, x1, y1, x2, y2, type) => {\r\n  switch (type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      const roughElement =\r\n        type === \"line\"\r\n          ? generator.line(x1, y1, x2, y2)\r\n          : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\r\n      return { id, x1, y1, x2, y2, type, roughElement };\r\n    case \"pencil\":\r\n      return { id, type, points: [{ x: x1, y: y1 }] };\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst nearPoint = (x, y, x1, y1, name) => {\r\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\r\n};\r\n\r\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\r\n  const a = { x: x1, y: y1 };\r\n  const b = { x: x2, y: y2 };\r\n  const c = { x, y };\r\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\r\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\r\n};\r\n\r\nconst positionWithinElement = (x, y, element) => {\r\n  const { type, x1, x2, y1, y2 } = element;\r\n  switch (type) {\r\n    case \"line\":\r\n      const on = onLine(x1, y1, x2, y2, x, y);\r\n      const start = nearPoint(x, y, x1, y1, \"start\");\r\n      const end = nearPoint(x, y, x2, y2, \"end\");\r\n      return start || end || on;\r\n    case \"rectangle\":\r\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\r\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\r\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\r\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\r\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\r\n    case \"pencil\":\r\n      const betweenAnyPoint = element.points.some((point, index) => {\r\n        const nextPoint = element.points[index + 1];\r\n        if (!nextPoint) return false;\r\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\r\n      });\r\n      return betweenAnyPoint ? \"inside\" : null;\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n\r\nconst getElementAtPosition = (x, y, elements) => {\r\n  return elements\r\n    .map(element => ({ ...element, position: positionWithinElement(x, y, element) }))\r\n    .find(element => element.position !== null);\r\n};\r\n\r\nconst adjustElementCoordinates = element => {\r\n  const { type, x1, y1, x2, y2 } = element;\r\n  if (type === \"rectangle\") {\r\n    const minX = Math.min(x1, x2);\r\n    const maxX = Math.max(x1, x2);\r\n    const minY = Math.min(y1, y2);\r\n    const maxY = Math.max(y1, y2);\r\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\r\n  } else {\r\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\r\n      return { x1, y1, x2, y2 };\r\n    } else {\r\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\r\n    }\r\n  }\r\n};\r\n\r\nconst cursorForPosition = position => {\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"br\":\r\n    case \"start\":\r\n    case \"end\":\r\n      return \"nwse-resize\";\r\n    case \"tr\":\r\n    case \"bl\":\r\n      return \"nesw-resize\";\r\n    default:\r\n      return \"move\";\r\n  }\r\n};\r\n\r\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\r\n  const { x1, y1, x2, y2 } = coordinates;\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"start\":\r\n      return { x1: clientX, y1: clientY, x2, y2 };\r\n    case \"tr\":\r\n      return { x1, y1: clientY, x2: clientX, y2 };\r\n    case \"bl\":\r\n      return { x1: clientX, y1, x2, y2: clientY };\r\n    case \"br\":\r\n    case \"end\":\r\n      return { x1, y1, x2: clientX, y2: clientY };\r\n    default:\r\n      return null; //should not really get here...\r\n  }\r\n};\r\n\r\nconst useHistory = initialState => {\r\n  const [index, setIndex] = useState(0);\r\n  const [history, setHistory] = useState([initialState]);\r\n\r\n  const setState = (action, overwrite = false) => {\r\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\r\n    if (overwrite) {\r\n      const historyCopy = [...history];\r\n      historyCopy[index] = newState;\r\n      setHistory(historyCopy);\r\n    } else {\r\n      const updatedState = [...history].slice(0, index + 1);\r\n      setHistory([...updatedState, newState]);\r\n      setIndex(prevState => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\r\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\r\n\r\n  return [history[index], setState, undo, redo];\r\n};\r\n\r\nconst getSvgPathFromStroke = stroke => {\r\n  if (!stroke.length) return \"\";\r\n\r\n  const d = stroke.reduce(\r\n    (acc, [x0, y0], i, arr) => {\r\n      const [x1, y1] = arr[(i + 1) % arr.length];\r\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\r\n      return acc;\r\n    },\r\n    [\"M\", ...stroke[0], \"Q\"]\r\n  );\r\n\r\n  d.push(\"Z\");\r\n  return d.join(\" \");\r\n};\r\n\r\nconst drawElement = (roughCanvas, context, element) => {\r\n  switch (element.type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      roughCanvas.draw(element.roughElement);\r\n      break;\r\n    case \"pencil\":\r\n      const stroke = getSvgPathFromStroke(getStroke(element.points));\r\n      context.fill(new Path2D(stroke));\r\n      break;\r\n    default:\r\n      throw new Error(`Type not recognised: ${element.type}`);\r\n  }\r\n};\r\n\r\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\r\n\r\nconst App = () => {\r\n  const [elements, setElements, undo, redo] = useHistory([]);\r\n  const [action, setAction] = useState(\"none\");\r\n  const [tool, setTool] = useState(\"pencil\");\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const roughCanvas = rough.canvas(canvas);\r\n\r\n    elements.forEach(element => drawElement(roughCanvas, context, element));\r\n  }, [elements]);\r\n\r\n  useEffect(() => {\r\n    const undoRedoFunction = event => {\r\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\r\n        if (event.shiftKey) {\r\n          redo();\r\n        } else {\r\n          undo();\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", undoRedoFunction);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", undoRedoFunction);\r\n    };\r\n  }, [undo, redo]);\r\n\r\n  const updateElement = (id, x1, y1, x2, y2, type) => {\r\n    const elementsCopy = [...elements];\r\n\r\n    switch (type) {\r\n      case \"line\":\r\n      case \"rectangle\":\r\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\r\n        break;\r\n      case \"pencil\":\r\n        elementsCopy[id].points = [...elementsCopy[id].points, { x: x2, y: y2 }];\r\n        break;\r\n      default:\r\n        throw new Error(`Type not recognised: ${type}`);\r\n    }\r\n\r\n    setElements(elementsCopy, true);\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    const { clientX, clientY } = event;\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      if (element) {\r\n        if (element.type === \"pencil\") {\r\n          const xOffsets = element.points.map(point => clientX - point.x);\r\n          const yOffsets = element.points.map(point => clientY - point.y);\r\n          setSelectedElement({ ...element, xOffsets, yOffsets });\r\n        } else {\r\n          const offsetX = clientX - element.x1;\r\n          const offsetY = clientY - element.y1;\r\n          setSelectedElement({ ...element, offsetX, offsetY });\r\n        }\r\n        setElements(prevState => prevState);\r\n\r\n        if (element.position === \"inside\") {\r\n          setAction(\"moving\");\r\n        } else {\r\n          setAction(\"resizing\");\r\n        }\r\n      }\r\n    } else {\r\n      const id = elements.length;\r\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\r\n      setElements(prevState => [...prevState, element]);\r\n      setSelectedElement(element);\r\n\r\n      setAction(\"drawing\");\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = event => {\r\n    const { clientX, clientY } = {x,y};\r\n\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\r\n    }\r\n\r\n    if (action === \"drawing\") {\r\n      const index = elements.length - 1;\r\n      const { x1, y1 } = elements[index];\r\n      updateElement(index, x1, y1, clientX, clientY, tool);\r\n    } else if (action === \"moving\") {\r\n      if (selectedElement.type === \"pencil\") {\r\n        const newPoints = selectedElement.points.map((_, index) => ({\r\n          x: clientX - selectedElement.xOffsets[index],\r\n          y: clientY - selectedElement.yOffsets[index],\r\n        }));\r\n        const elementsCopy = [...elements];\r\n        elementsCopy[selectedElement.id] = {\r\n          ...elementsCopy[selectedElement.id],\r\n          points: newPoints,\r\n        };\r\n        setElements(elementsCopy, true);\r\n      } else {\r\n        const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\r\n        const width = x2 - x1;\r\n        const height = y2 - y1;\r\n        const newX1 = clientX - offsetX;\r\n        const newY1 = clientY - offsetY;\r\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type);\r\n      }\r\n    } else if (action === \"resizing\") {\r\n      const { id, type, position, ...coordinates } = selectedElement;\r\n      const { x1, y1, x2, y2 } = resizedCoordinates(clientX, clientY, position, coordinates);\r\n      updateElement(id, x1, y1, x2, y2, type);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (selectedElement) {\r\n      const index = selectedElement.id;\r\n      const { id, type } = elements[index];\r\n      if ((action === \"drawing\" || action === \"resizing\") && adjustmentRequired(type)) {\r\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\r\n        updateElement(id, x1, y1, x2, y2, type);\r\n      }\r\n    }\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n  };\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"fixed\" }}>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"selection\"\r\n          checked={tool === \"selection\"}\r\n          onChange={() => setTool(\"selection\")}\r\n        />\r\n        <label htmlFor=\"selection\">Selection</label>\r\n        <input type=\"radio\" id=\"line\" checked={tool === \"line\"} onChange={() => setTool(\"line\")} />\r\n        <label htmlFor=\"line\">Line</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"rectangle\"\r\n          checked={tool === \"rectangle\"}\r\n          onChange={() => setTool(\"rectangle\")}\r\n        />\r\n        <label htmlFor=\"rectangle\">Rectangle</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"pencil\"\r\n          checked={tool === \"pencil\"}\r\n          onChange={() => setTool(\"pencil\")}\r\n        />\r\n        <label htmlFor=\"pencil\">Pencil</label>\r\n      </div>\r\n      <div style={{ position: \"fixed\", bottom: 0, padding: 10 }}>\r\n        <button onClick={undo}>Undo</button>\r\n        <button onClick={redo}>Redo</button>\r\n        <button onClick={refreshPage}>Clear</button>\r\n      </div>\r\n      <canvas\r\n        id=\"canvas\"\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n      >\r\n        Canvas\r\n      </canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}